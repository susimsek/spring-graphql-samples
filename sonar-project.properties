sonar.organization=susimsek
sonar.projectKey=spring-graphql-samples
sonar.projectName=Spring Graphql Samples

sonar.projectVersion=1.0
sonar.host.url=https://sonarcloud.io
sonar.java.binaries=target/classes
sonar.sources=src/main/
sonar.sourceEncoding=UTF-8
sonar.test.inclusions=src/test/**/*.*
sonar.coverage.jacoco.xmlReportPaths=target/site/**/jacoco*.xml
sonar.java.codeCoveragePlugin=jacoco
sonar.junit.reportPaths=target/surefire-reports,target/failsafe-reports
sonar.issue.ignore.multicriteria=S3437,S4502,S4684,UndocumentedApi,S125
# Rule https://sonarcloud.io/coding_rules?open=squid%3AS3437&rule_key=squid%3AS3437 is ignored, as a JPA-managed field cannot be transient
sonar.issue.ignore.multicriteria.S3437.resourceKey=src/main/java/**/*
sonar.issue.ignore.multicriteria.S3437.ruleKey=squid:S3437
# Rule https://sonarcloud.io/coding_rules?open=squid%3AUndocumentedApi&rule_key=squid%3AUndocumentedApi is ignored, as we want to follow "clean code" guidelines and classes, methods and arguments names should be self-explanatory
sonar.issue.ignore.multicriteria.UndocumentedApi.resourceKey=src/main/java/**/*
sonar.issue.ignore.multicriteria.UndocumentedApi.ruleKey=squid:UndocumentedApi
# Rule https://sonarcloud.io/coding_rules?open=squid%3AS4502&rule_key=squid%3AS4502 is ignored, as for JWT tokens we are not subject to CSRF attack
sonar.issue.ignore.multicriteria.S4502.resourceKey=src/main/java/**/*
sonar.issue.ignore.multicriteria.S4502.ruleKey=squid:S4502
# Rule https://sonarcloud.io/coding_rules?open=java%3AS4684&rule_key=java%3AS4684
sonar.issue.ignore.multicriteria.S4684.resourceKey=src/main/java/**/*
sonar.issue.ignore.multicriteria.S4684.ruleKey=java:S4684
sonar.issue.ignore.multicriteria.S125.resourceKey=src/main/kotlin/**/*
sonar.issue.ignore.multicriteria.S125.ruleKey=kotlin:S125