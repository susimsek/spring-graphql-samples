spring:
  application:
    name: spring-gql-service
  profiles:
    active: local
#  rsocket:
#    server:
#      transport: tcp
#  graphql:
#    rsocket:
#      mapping: subscriptions
  cloud:
    function:
      definition: postEventPublisher;postEventConsumer
    stream:
      bindings:
        postEventPublisher-out-0:
          destination: posts
        postEventConsumer-in-0:
          destination: posts
  graphql:
    websocket:
      path: /subscriptions
    cors:
      allowed-origins: http://localhost:3000
      allow-credentials: true
      allowed-headers: Origin, Accept, X-Requested-With, Authorization, Cache-Control, Content-Type, Accept-Language, Recaptcha
  main:
    allow-bean-definition-overriding: true
  web:
    locale: en
  messages:
    basename: i18n/messages
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    restart:
      enabled: true
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
      show-details: always
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

instance-id: ${spring.application.name}:${random.uuid}